{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","sorter","columnNumber","sortBy","tbody","compare","rowsArray","rows","toLowerCase","rowA","rowB","cells","innerHTML","convertSalary","sort","append","str","slice","replace","addEventListener","e","th","target","closest","contains","cellIndex","textContent"],"mappings":";AAAA,aAkDC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAhDD,IAAMA,EAAQC,SAASC,cAAc,SAYrC,SAASC,EAAOC,EAAcC,GACtBC,IAIFC,EAJED,EAAQN,EAAME,cAAc,SAE5BM,EAAgBF,EAAAA,EAAMG,MAIpBJ,OAAAA,EAAOK,eACR,IAAA,MACHH,EAAU,SAASI,EAAMC,GAChB,OAACD,EAAKE,MAAMT,GAAcU,WAC5BF,EAAKC,MAAMT,GAAcU,WAEhC,MAEG,IAAA,SACHP,EAAU,SAASI,EAAMC,GAChBG,OAAAA,EAAcJ,EAAKE,MAAMT,GAAcU,WAC1CC,EAAcH,EAAKC,MAAMT,GAAcU,YAE7C,MAEF,QACEP,EAAU,SAASI,EAAMC,GAChBD,OAAAA,EAAKE,MAAMT,GAAcU,UAC5BF,EAAKC,MAAMT,GAAcU,UAAY,GAAK,GAKpDN,EAAUQ,KAAKT,GACfD,EAAMW,OAANX,MAAAA,EAAgBE,EAAAA,IAGlB,SAASO,EAAcG,GACdA,OAAiC,IAAjCA,EAAIC,MAAM,GAAGC,QAAQ,IAAK,KA7CnCpB,EAAMqB,iBAAiB,QAAS,SAACC,GACzBC,IAAAA,EAAKD,EAAEE,OAAOC,QAAQ,MAEvBF,GAAOvB,EAAM0B,SAASH,IAI3BpB,EAAOoB,EAAGI,UAAWJ,EAAGK","file":"main.ee652de2.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\n\ntable.addEventListener('click', (e) => {\n  const th = e.target.closest('th');\n\n  if (!th || !table.contains(th)) {\n    return;\n  }\n\n  sorter(th.cellIndex, th.textContent);\n});\n\nfunction sorter(columnNumber, sortBy) {\n  const tbody = table.querySelector('tbody');\n\n  const rowsArray = [...tbody.rows];\n\n  let compare;\n\n  switch (sortBy.toLowerCase()) {\n    case 'age':\n      compare = function(rowA, rowB) {\n        return +rowA.cells[columnNumber].innerHTML\n          - +rowB.cells[columnNumber].innerHTML;\n      };\n      break;\n\n    case 'salary':\n      compare = function(rowA, rowB) {\n        return convertSalary(rowA.cells[columnNumber].innerHTML)\n          - convertSalary(rowB.cells[columnNumber].innerHTML);\n      };\n      break;\n\n    default:\n      compare = function(rowA, rowB) {\n        return rowA.cells[columnNumber].innerHTML\n          > rowB.cells[columnNumber].innerHTML ? 1 : -1;\n      };\n      break;\n  }\n\n  rowsArray.sort(compare);\n  tbody.append(...rowsArray);\n}\n\nfunction convertSalary(str) {\n  return str.slice(1).replace(',', '.') * 1000;\n}\n"]}